data.frame(chr_display, mid = apply(chr_display, 1, mean), spr = upv - lwv)
chr_display <- function(sample) {
lwv = quantile(sample, c(0.5, 0.25, 0.125, 0.0625, 0), type = 8)
upv = quantile(sample, 1 - c(0.5, 0.25, 0.125, 0.0625, 0), type = 8)
temp = cbind(lwv, upv)
rownames(temp) = c("중앙값", "4분위수", "8분위수", "16분위수", "끝값")
return(data.frame(temp, mid = apply(temp, 1, mean), spr = upv - lwv))
}
chr_display(norm_sample)
chr_display(chi_sample)
chr_display(beta_sample)
rm(list = ls())
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
chr_display <- function(sample) {
lwv = quantile(sample, c(0.5, 0.25, 0.125, 0.0625, 0), type = 8)
upv = quantile(sample, 1 - c(0.5, 0.25, 0.125, 0.0625, 0), type = 8)
temp = cbind(lwv, upv)
rownames(temp) = c("중앙값", "4분위수", "8분위수", "16분위수", "끝값")
return(data.frame(temp, mid = apply(temp, 1, mean), spr = upv - lwv))
}
chr_display(norm_sample)
chr_display(chi_sample)
chr_display(beta_sample)
chr_display(norm_sample)
chr_display(norm_sample)
chr_display(norm_sample)
chr_display(norm_sample)
norm_sample <- rnorm(100)  ## 표준정규분포
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 20)
hist(chi_sample, main = expression(chi^2(2)), breaks = 20)
hist(beta_sample, main = expression(beta(10,2)), breaks = 20)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 10)
hist(chi_sample, main = expression(chi^2(2)), breaks = 10)
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 10)
hist(chi_sample, main = expression(chi^2(2)), breaks = 10)
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 10)
hist(chi_sample, main = expression(chi^2(2)), breaks = 10)
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 10)
hist(chi_sample, main = expression(chi^2(2)), breaks = 10)
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
norm_sample <- rnorm(100)  ## 표준정규분포
chi_sample <- rchisq(100, 2)  ## 카이제곱분포
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 10)
hist(chi_sample, main = expression(chi^2(2)), breaks = 10)
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
chr_display(norm_sample)
chr_display <- function(sample) {
lwv = quantile(sample, c(0.5, 0.25, 0.125, 0.0625, 0), type = 8)
upv = quantile(sample, 1 - c(0.5, 0.25, 0.125, 0.0625, 0), type = 8)
temp = cbind(lwv, upv)
rownames(temp) = c("중앙값", "4분위수", "8분위수", "16분위수", "끝값")
return(data.frame(temp, mid = apply(temp, 1, mean), spr = upv - lwv))
}
chr_display(chi_sample)
hist(chi_sample, main = expression(chi^2 (2)), breaks = 10)
hist(chi_sample, main = expression(chi^2~(2)), breaks = 10)
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 10)
hist(chi_sample, main = expression(chi^2~(2)), breaks = 10)
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
chr_display(beta_sample)
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
beta_sample <- rbeta(100, 10, 2)  ## 베타분포
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
par(mfrow = c(3,1))
hist(norm_sample, main = expression(N(0,1)), breaks = 10)
hist(chi_sample, main = expression(chi^2~(2)), breaks = 10)
hist(beta_sample, main = expression(beta(10,2)), breaks = 10)
chr_display(beta_sample)
100/16
data(car)
?data
data()
data("mtcars")
mtcars
doxplot(mpg~cyl, data = mtcars)
boxplot(mpg~cyl, data = mtcars)
boxplot(mpg~cyl, data = mtcars, main = "Car Milage Data",
xlab = "Number of Cylinders", ylab = "Miles per Gallon")
data("ToothGrowth")
boxplot(len~supp*dose, data=ToothGrowth, notch=TRUE,
col=(c("gold","darkgreen")),
main="Tooth Growth", xlab="Suppliment and Dose")
library(vioplot)
install.packages("vioplot")
library(vioplot)
x1 <- mtcars$mpg[mtcars$cyl == 2]
x2 <- mtcars$mpg[mtcars$cyl == 4]
x3 <- mtcars$mpg[mtcars$cyl == 6]
vioplot(x1, x2, x3)
vioplot(x1, x2, x3, names = c("4 cyl", "6 cyl", "8 cyl"))
x1
x2
x1 <- mtcars$mpg[mtcars$cyl == 2]
x2 <- mtcars$mpg[mtcars$cyl == 4]
x3 <- mtcars$mpg[mtcars$cyl == 6]
vioplot(x1, x2, x3, names = c("4 cyl", "6 cyl", "8 cyl"))
x1
unique(mtcars$mpg)
unique(mtcars$cyl)
x1 <- mtcars$mpg[mtcars$cyl == 4]
x2 <- mtcars$mpg[mtcars$cyl == 6]
x3 <- mtcars$mpg[mtcars$cyl == 8]
vioplot(x1, x2, x3, names = c("4 cyl", "6 cyl", "8 cyl"))
vioplot(x1, x2, x3, names = c("4 cyl", "6 cyl", "8 cyl"), col = "gold")
library(aplpack)
bagplot(wt, mpg, xlab="Car Weight", ylab="Miles Per Gallon",
main="Bagplot Example"))
attach(mtcars)
bagplot(wt, mpg, xlab="Car Weight", ylab="Miles Per Gallon",
main="Bagplot Example"))
bagplot(wt, mpg, xlab="Car Weight", ylab="Miles Per Gallon",
main="Bagplot Example")
rm(list = ls())
data("mtcars")
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
data("ToothGrowth")
boxplot(len~supp*dose, data=ToothGrowth, notch=TRUE,
col=(c("gold","darkgreen")),
main="Tooth Growth", xlab="Suppliment and Dose")
install.packages("vioplot")
library(vioplot)
x1 <- mtcars$mpg[mtcars$cyl == 4]
x2 <- mtcars$mpg[mtcars$cyl == 6]
x3 <- mtcars$mpg[mtcars$cyl == 8]
vioplot(x1, x2, x3, names = c("4 cyl", "6 cyl", "8 cyl"), col = "gold")
install.packages("vioplot")
install.packages("vioplot")
library(vioplot)
x1 <- mtcars$mpg[mtcars$cyl == 4]
x2 <- mtcars$mpg[mtcars$cyl == 6]
x3 <- mtcars$mpg[mtcars$cyl == 8]
vioplot(x1, x2, x3, names = c("4 cyl", "6 cyl", "8 cyl"), col = "gold")
title("Violin Plots of Miles Per Gallon")
library(aplpack)
attach(mtcars)
bagplot(wt, mpg, xlab="Car Weight", ylab="Miles Per Gallon",
main="Bagplot Example")
rm(list = ls())
setwd("C:/Users/hollyriver/Documents/Github/R/탐색적자료분석/data")
dt <- read.csv("gloval GNP.csv", header = TRUE)
colnames(dt) = c("국가명", "1인당 GNP")
str(dt)
x <- dt[,2]
stem(x)
boxplot(x)
#-------모평균에 대한 95% 신뢰구간-------
n <- length(x)  ## 자료 수
x_bar <- x |> mean()  ## 점추정치
sigma_x <- sd(x)  ## 표본분산
se_x <- sigma_x/sqrt(n)
lwb <- (x_bar - qt(0.975, n-1)*se_x) |> round(4)
upb <- (x_bar + qt(0.975, n-1)*se_x) |> round(4)
print(paste("모평균에 대한 95% CI : (", lwb, ", ", upb, ")", sep = ""))
#-------대칭화 변환-------
num <- quantile(x, c(0, 0.25, 0.5, 0.75, 1), type = 8)
H_L <- num[2]
M <- num[3]
H_U <- num[4]
app_p <- 1 - ((H_L + H_U)/2 - M)/(((H_L - M)^2 + (H_U - M)^2)/(4*M))  ## 근사적인 p값
app_p
app_p <- 1 - ((H_L + H_U)/2 - M)/((H_L - M)^2 + (H_U - M)^2) * 4* M  ## 근사적인 p값
app_p
x^app_p
boxplot(x^app_p)
fivenum(x^app_p)
fivenum(x^0.1)
boxplot(x^0.1)
boxplot(x^0.2)
boxplot(x^0.3)
boxplot(x^0.4)
boxplot(x^0.1)
boxplot(log(x))
boxplot(x^app_p)
library(MASS)
boxcox(x)
x
boxcox(x)
x^app_p
boxplot(x^app_p)
boxplot(x^-1)
boxplot(x^-2)
boxplot(x^-3)
x^1
x^-1
x^-4
boxplot(x^0.1)
boxplot(x^0.0001)
boxplot(x^0.000000001)
boxplot(x^app_p)
boxplot(x^app_p)
boxplot(x)
par(mfcol = c(1,2))
boxplot(x^app_p)
boxplot(x)
stem(x^app_p)
stem(x)
par(mfcol = c(2,2))
boxplot(x^app_p)
boxplot(x)
stem(x^app_p)
stem(x)
par(mfrow = c(2,2))
boxplot(x^app_p)
boxplot(x)
stem(x^app_p)
stem(x)
boxplot(log(x))
par(mfrow = c(1,2))
boxplot(log(x))
boxplot(x)
stem(log(x))
mean(log(x))
sd(log(x))
lwb_trans <- mu_trans - qt(0.975, n-1)*sd_trans
upb_trans <- mu_trans + qt(0.975, n-1)*sd_trans
mu_trans <- mean(log(x))
sd_trans <- sd(log(x))
lwb_trans <- mu_trans - qt(0.975, n-1)*sd_trans
upb_trans <- mu_trans + qt(0.975, n-1)*sd_trans
paste("대수변환된 자료를 이용한 모평균에 대한 95% CI : (", lwb_trans, ", ", upb_trans, sep = "")
print(paste("대수변환된 자료를 이용한 모평균에 대한 95% CI : (", lwb_trans, ", ", upb_trans, sep = ""))
print(paste("대수변환된 자료를 이용한 모평균에 대한 95% CI : (", lwb_trans, ", ", upb_trans, ")", sep = ""))
print(paste("로그 모평균에 대한 95% CI : (", lwb_trans, ", ", upb_trans, ")", sep = ""))
rm(list = ls())
setwd("C:/Users/hollyriver/Documents/Github/R/탐색적자료분석/data")
dt <- read.csv("gloval GNP.csv", header = TRUE)
colnames(dt) = c("국가명", "1인당 GNP")
str(dt)
x <- dt[,2]
stem(x)
boxplot(x)
par(mfrow = c(1,1))
boxplot(x)
rm(list = ls())
setwd("C:/Users/hollyriver/Documents/Github/R/탐색적자료분석/data")
dt <- read.csv("gloval GNP.csv", header = TRUE)
colnames(dt) = c("국가명", "1인당 GNP")
str(dt)
x <- dt[,2]
stem(x)
boxplot(x)
boxplot(x, xlab = "1")
boxplot(x, ylab = "달러")
boxplot(x, ylab = "Doller")
boxplot(x, ylab = "달러")
stem(x, scale = 2)
rm(list = ls())
setwd("C:/Users/hollyriver/Documents/Github/R/탐색적자료분석/data")
dt <- read.csv("gloval GNP.csv", header = TRUE)
colnames(dt) = c("국가명", "1인당 GNP")
str(dt)
x <- dt[,2]
stem(x, scale = 2)
boxplot(x, ylab = "달러")
n <- length(x)  ## 자료 수
x_bar <- x |> mean()  ## 점추정치
sigma_x <- sd(x)  ## 표본분산
se_x <- sigma_x/sqrt(n)
lwb <- (x_bar - qt(0.975, n-1)*se_x) |> round(4)
upb <- (x_bar + qt(0.975, n-1)*se_x) |> round(4)
print(paste("모평균에 대한 95% CI : (", lwb, ", ", upb, ")", sep = ""))
num <- quantile(x, c(0, 0.25, 0.5, 0.75, 1), type = 8)
H_L <- num[2]
M <- num[3]
H_U <- num[4]
app_p <- 1 - ((H_L + H_U)/2 - M)/(((H_L - M)^2 + (H_U - M)^2)/(4*M))  ## 근사적인 p값
app_p
histogram(x)
hist(x)
hist(x, breaks = 20)
app_p
boxplot(log(x))
stem(log(x))
boxplot(log(x), ylab = "log(달러)")
mu_trans <- mean(log(x))
sd_trans <- sd(log(x))
lwb_trans <- mu_trans - qt(0.975, n-1)*sd_trans
upb_trans <- mu_trans + qt(0.975, n-1)*sd_trans
print(paste("대수변환된 모평균에 대한 95% CI : (", lwb_trans, ", ", upb_trans, ")", sep = ""))
#-------모평균에 대한 95% 신뢰구간-------
n <- length(x)  ## 자료 수
x_bar <- x |> mean()  ## 점추정치
sigma_x <- sd(x)  ## 표본분산
se_x <- sigma_x/sqrt(n)
lwb <- (x_bar - qnorm(0.975)*se_x) |> round(4)
upb <- (x_bar + qnorm(0.975)*se_x) |> round(4)
print(paste("모평균에 대한 95% 근사신뢰구간 : (", lwb, ", ", upb, ")", sep = ""))
mu_trans <- mean(log(x))
sd_trans <- sd(log(x))
lwb_trans <- mu_trans - qt(0.975, n-1)*sd_trans
upb_trans <- mu_trans + qt(0.975, n-1)*sd_trans
print(paste("대수변환된 모평균에 대한 95% 근사신뢰구간 : (", lwb_trans, ", ", upb_trans, ")", sep = ""))
mu_trans <- mean(log(x))
sd_trans <- sd(log(x))
lwb_trans <- mu_trans - qnorm(0.975)*sd_trans
upb_trans <- mu_trans + qnorm(0.975)*sd_trans
print(paste("대수변환된 모평균에 대한 95% 근사신뢰구간 : (", lwb_trans, ", ", upb_trans, ")", sep = ""))
#-------변수 변환-------
df <- data.frame(dist = c(12:22),
size = c(12, 9.4, 7.2, 6.2, 5.2, 4.5, 4.0, 3.6, 3.2, 3.0, 2.7))
df
plot(dist~size, df)
plot(dist~(1/size), df)
plot(dist~(1/size), df)
plot(dist~size, df)
1/df$size
plot(df$dist, 1/df$size)
trans_size = 1/df$size
plot(df$dist, trans_size)
plot(dist~size, df)
trans_size = 1/df$size
plot(df$dist, trans_size)
plot(df$dist, trans_size, xlab = "dist", ylab = "inv_size")
plot(df$dist, trans_size, xlab = "dist", ylab = "inverse size")
