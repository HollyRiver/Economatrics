q()
q()
q()
population
population <- read.csv("광역시-구 인구.csv", header = T, fileEncoding = "CP949")
population
setwd("C:\\Users\\hollyriver\\Documents\\Github\\R\\EDA\\data\\")
population <- read.csv("광역시-구 인구.csv", header = T, fileEncoding = "CP949")
population
population
population$인구
hist(population$인구)
x <- population$인구
?power
power_trans <- function(x, p) {
return(1/p * ((x+1)^p + 1))
}
power_trans(x, 0.5)
hist(power_trans(x, 0.5))
par(mfcol = c(1, 2))
hist()
hist(power_trans(x, 0.5))
hist(x)
hist(power_trans(x, 0.5))
par(mfcol = c(1, 2))
hist(x)
hist(power_trans(x, 0.5))
hist(x)
hist(power_trans(x, 0.75))
hist(x)
hist(power_trans(x, 0.875))
hist(x)
hist(power_trans(x, 0.9))
hist(x, breaks = 10)
hist(power_trans(x, 0.9), breaks = 10)
hist(power_trans(x, 0.8), breaks = 10)
hist(power_trans(x, 0.9), breaks = 10)
hist(x, breaks = 10)
hist(power_trans(x, 0.9), breaks = 10)
acid
Animals
Animals$body
hist(Animals$body)
hist(Animals$brain)
x <- Animals$brain
hist(x)
power_trans(x, 0.25)
hist(power_trans(x, 0.25))
hist(power_trans(x, 0.125))
hist(power_trans(x, 0.0625))
hist(x, breaks = 8)
hist(power_trans(x, 0.0625), breaks = 8)
hist(power_trans(x, 0.125), breaks = 8)
hist(x, breaks = 8)
hist(power_trans(x, 0.125), breaks = 8)
hist(power_trans(x, 0.25), breaks = 8)
hist(power_trans(x, 0.125), breaks = 8)
hist(power_trans(x, 0.125), breaks = 8)
hist(power_trans(x, 0.25), breaks = 8)
hist(power_trans(x, 0.125), breaks = 8)
hist(power_trans(x, 0.25), breaks = 8)
hist(power_trans(x, 0.125), breaks = 8)
hist(power_trans(x, 0.0625), breaks = 8)
hist(power_trans(x, 0.125), breaks = 8)
hist(power_trans(x, 0.0625), breaks = 8)
hist(power_trans(x, 0.0625), breaks = 8)
hist(power_trans(x, 0.125), breaks = 8)
hist(power_trans(x, 0.0625), breaks = 8)
hist(power_trans(x, 0.125), breaks = 10)
hist(power_trans(x, 0.0625), breaks = 8)
hist(power_trans(x, 0.0625), breaks = 5)
hist(power_trans(x, 0.125), breaks = 8)
hist(power_trans(x, 0.0625), breaks = 8)
hist(power_trans(x, 0.0625), breaks = 6)
hist(power_trans(x, 0.25), breaks = 6)
hist(power_trans(x, 0.125), breaks = 6)
hist(power_trans(x, 0.0625), breaks = 6)
hist(power_trans(x, 0.125), breaks = 6)
hist(power_trans(x, 0.0625), breaks = 6)
hist(power_trans(x, 0.125), breaks = 6)
hist(power_trans(x, 0.25), breaks = 6)
hist(power_trans(x, 0.125), breaks = 6)
hist(power_trans(x, 0.125), breaks = 6)
hist(power_trans(x, 0.0625), breaks = 6)
hist(power_trans(x, 0.125), breaks = 6)
hist(x^0.125)
hist(x^0.125, breaks = 10)
hist(power_trans(x, 0.125), breaks = 10)
hist(power_trans(x, 0.125), breaks = 10)
hist(x^0.125, breaks = 10)
?hist
hist(power_trans(x, 0.125), breaks = 10)
hist(x^0.125, breaks = 10)
hist(power_trans(x, 0.125))
hist(x^0.125)
hist(x^0.125, breaks = 8)
hist(power_trans(x, 0.125))
hist(x^0.125, breaks = 8)
hist(x^0.125, breaks = 8)
hist(power_trans(x, 0.125))
hist(x^0.125, breaks = 8)
hist(x^0.125, breaks = 6)
hist(power_trans(x, 0.125))
hist(x^0.125, breaks = 6)
hist(power_trans(x, 0.125))
hist(power_trans(x, 0.125))
hist(x^0.125)
power_trans <- function(x, p) {
if (p <= 1) {
return(1/p * ((x+1)^p + 1))
}
else {
return((1+x/p)^p - 1)
}
}
power_trans(power_trans(x, 0.25), 4)
x
hist(power_trans(power_trans(x, 0.25), 4))
hist(x)
power_trans <- function(x, p) {
if (p <= 1) {
return((1/p) * ((x+1)^p + 1))
}
else {
return((1+x/p)^p - 1)
}
}
hist(power_trans(power_trans(x, 0.25), 4))
hist(x)
Animals
rownames(Animals)
abbreviate(rownames(Animals))
x <- Animals$body
y <- Animals$brain
plot(y~x)
plot(y~x, type = "n")
par(mfcol = c(1,1))
plot(y~x, type = "n")
text(x, y, labels = abbreviate(rownames(Animals)))
text(x, y, labels = abbreviate(rownames(Animals)), cex = 0.5)
par(mfcol = c(1,1))
plot(y~x, type = "n")
text(x, y, labels = abbreviate(rownames(Animals)), cex = 0.5)
text(log(x), log(y), labels = abbreviate(rownames(Animals)), cex = 0.5)
par(mfcol = c(1,2))
plot(y~x, type = "n")
text(x, y, labels = abbreviate(rownames(Animals)), cex = 0.5)  ## ㅈㄴ 겹쳐있음
plot(log(y)~log(x), type = "n")
text(log(x), log(y), labels = abbreviate(rownames(Animals)), cex = 0.5)
dev.new()
par(mfcol = c(1,2))
plot(y~x, type = "n")
text(x, y, labels = abbreviate(rownames(Animals)), cex = 0.5)  ## ㅈㄴ 겹쳐있음
plot(log(y)~log(x), type = "n")
text(log(x), log(y), labels = abbreviate(rownames(Animals)), cex = 0.5)  ## 흩어짐
par(mfcol = c(1,2))
plot(y~x, type = "n")
text(x, y, labels = abbreviate(rownames(Animals)), cex = 0.5)  ## ㅈㄴ 겹쳐있음
plot(log(y)~log(x), type = "n")
text(log(x), log(y), labels = abbreviate(rownames(Animals)), cex = 0.8)  ## 흩어짐
dev.new()
par(mfcol = c(1,2))
plot(y~x, type = "n")
text(x, y, labels = abbreviate(rownames(Animals)), cex = 0.5)  ## ㅈㄴ 겹쳐있음
plot(log(y)~log(x), type = "n")
text(log(x), log(y), labels = abbreviate(rownames(Animals)), cex = 0.8)  ## 흩어짐
rlm(log(y)~log(x))
rlm(log(y)~log(x))
rlm()
?rlm()
library(MASS)
rlm(log(y)~log(x))
library(MASS)
dev.new()
par(mfcol = c(1, 2))
plot(log(y)~log(x))
abline(rlm(log(y)~log(x)))
plot(log(y)~log(x))
abline(lm(log(y)~log(x)))
library(MASS)
dev.new()
par(mfcol = c(1, 2))
plot(log(y)~log(x), pch = 16, main = "Ordinary Linear Model")
abline(rlm(log(y)~log(x)))
plot(log(y)~log(x), pch = 16, main = "Robust Linear Model")
abline(lm(log(y)~log(x)))
y <- c(rnorm(90, 40, 10), rnorm(10, 80, 5))
z_x <- (x - mean(x))/sd(x)
z_y <- (y - mean(y))/sd(y)
zz_x <- (x - median(x))/(IQR(x)/1.35)
zz_y <- (y - median(y))/(IQR(y)/1.35)
dev.new()
dev.new()
hist(z_x)
hist(z_y)
hist(zz_x)
hist(zz_y)
par(mfcol = c(2,2))
hist(z_x)
hist(z_y)
hist(zz_x)
hist(zz_y)
x <- rnorm(100, 40, 10)
y <- c(rnorm(90, 40, 10), rnorm(10, 80, 5))
z_x <- (x - mean(x))/sd(x)
z_y <- (y - mean(y))/sd(y)
zz_x <- (x - median(x))/(IQR(x)/1.35)
zz_y <- (y - median(y))/(IQR(y)/1.35)
dev.new()
par(mfcol = c(2,2))
hist(z_x)
hist(z_y)
hist(zz_x)
hist(zz_y)
hist(z_x, breaks = 10)
hist(z_y, breaks = 10)
hist(zz_x, breaks = 10)
hist(zz_y, breaks = 10)
par(mfrow = c(2,2))
hist(z_x, breaks = 10)
hist(z_y, breaks = 10)
hist(zz_x, breaks = 10)
hist(zz_y, breaks = 10)
x1 <- rgamma(100, 4)
x2 <- rgamma(100, 5)
x3 <- rgamma(100, 9)
data.frame(claims = c(x1, x2, x3), groups = rep(c("A", "B", "C"), c(100, 100, 100)))
insurance <- data.frame(claims = c(x1, x2, x3), groups = rep(c("A", "B", "C"), c(100, 100, 100)))
boxplot(insurance$claims~insurance$groups)
par(mfcol = c(1,1))
boxplot(insurance$claims~insurance$groups)
x <- insurance$claims
fivenum(x)
y <- insurance$claims
x <- insurance$groups
unique(x)
spr <- c()
med <- c()
groups <- unique(x)
fivenum(insurance[insurance$groups == groups[1], ])
insurance[insurance$groups == groups[1], ]
insurance[insurance$groups == groups[1], 1]
fivenum(insurance[insurance$groups == groups[1], 1])
for (i in 1:3) {
temp_dt <- insurance[insurance$groups == groups[i], 1]
temp_five <- fivenum(temp_dt)
spr <- c(spr, temp_five[4] - temp_five[2])
med <- c(med, temp_five[3])
}
spr
med
trans_med <- log(med)
trans_spr <- log(spr)
lm(trans_spr~trans_med)
lm(trans_spr~trans_med)$coef
p <- 1-lm(trans_spr~trans_med)$coef[2]
p
boxplot(insurance$claims^p~insurance$groups)
par(mfcol = c(1,2))
boxplot(insurance$claims~insurance$groups)
boxplot(insurance$claims^p~insurance$groups)
boxplot(insurance$claims~insurance$groups, main = "기존 상자 그림", xlab = "groups", ylab = "claims")
boxplot(insurance$claims^p~insurance$groups, main = "산포가 균일화된 상자그림", xlab = "groups", ylab = "transformed claims")
boxplot(insurance$claims^0.5~insurance$groups, xlab = "groups", ylab = "claims")
boxplot(insurance$claims~insurance$groups, main = "기존 상자 그림", xlab = "groups", ylab = "claims")
boxplot(insurance$claims^p~insurance$groups, main = "산포가 균일화된 상자그림", xlab = "groups", ylab = "transformed claims")
boxplot(insurance$claims^0.5~insurance$groups, xlab = "groups", ylab = "claims")
boxplot(insurance$claims^p~insurance$groups, main = "산포가 균일화된 상자그림", xlab = "groups", ylab = "transformed claims")
boxplot(insurance$claims^0.25~insurance$groups, xlab = "groups", ylab = "claims")
p
darwin <- c(49, -67, 8, 16, 6, 23, 28, 41, 14, 29, 56, 24, 75, 60, -48)
sort(darwin)
darwin <- sort(darwin)
length(darwin)
p_i <- (seq(1:15) - 0.5)/15
p_i
plot(pnorm(darwin), p_i)
qqnorm(darwin)
par(mfcol = c(1,1))
qqnorm(darwin)
plot(pnorm(darwim), p_i)
plot(pnorm(darwin), p_i)
stand_darwin <- (darwin - mean(darwin))/std(darwin)
stand_darwin <- (darwin - mean(darwin))/sd(darwin)
plot(pnorm(stand_darwin), p_i)
plot(pnorm(stand_darwin, mean(darwin), sd(darwin)), p_i)
par(mfcol = c(1,2))
plot(pnorm(stand_darwin, mean(darwin), sd(darwin)), p_i)
qqnorm(darwin)
plot(pnorm(stand_darwin, mean(darwin), sd(darwin)), p_i, xlab = "Theoretical provability", ylab = "Sample provability")
qqnorm(darwin)
plot(pnorm(stand_darwin, mean(darwin), sd(darwin)), p_i, xlab = "Theoretical provability", ylab = "Sample provability", main = "Normal P-P Plot")
qqnorm(darwin)
plot(p_i, pnorm(stand_darwin, mean(darwin), sd(darwin)), xlab = "Theoretical provability", ylab = "Sample provability", main = "Normal P-P Plot")
qqnorm(darwin)
, p_i
, p_i
plot(pnorm(stand_darwin, mean(darwin), sd(darwin)), p_i, xlab = "Theoretical provability", ylab = "Sample provability", main = "Normal P-P Plot")
qqnorm(darwin)
plot(p_i, pnorm(stand_darwin, mean(darwin), sd(darwin)), xlab = "Sample provability", ylab = "Theoretical provability", main = "Normal P-P Plot")
qqnorm(darwin)
qqnorm(c(25, 175, rnorm(38,100,15)))
par(mfcol = c(1,1))
x <- c(25, 175, rnorm(38,100,15))
qqnorm(x)
x_i <- sort(x)
length(x)
p_i <- (seq(1:40) - 0.5)/40
plot(p_i, pnorm(x_i))
plot(p_i, pnorm(x_i, mean(x), sd(x)))
qqnorm(x)
plot(p_i, pnorm(x_i, mean(x), sd(x)))
par(mfcol = c(1, 2))
qqnorm(x)
plot(p_i, pnorm(x_i, mean(x), sd(x)))
stand_x <- (x_i - mean(x))/sd(x)
plot(p_i, pnorm(stand_x))
qqnorm(x)
qqnorm(x)
plot(p_i, pnorm(stand_x))
leukemia
length(leukemia)
p_i <- (seq(1:21)-0.5)/21
plot(qexp(p_i), sort(leukemia))
plot(qweibull(p_i), sort(leukemia))
plot(qweibull(p_i, 1), sort(leukemia))
plot(qweibull(p_i, 1.5), sort(leukemia))
plot(qweibull(p_i, 2), sort(leukemia))
plot(qgamma(p_i, 2), sort(leukemia))
plot(qweibull(p_i, 2), sort(leukemia))
plot(qgamma(p_i, 2), sort(leukemia))
plot(qweibull(p_i, 2), sort(leukemia))
plot(qweibull(p_i, 2), sort(leukemia))
plot(qgamma(p_i, 2), sort(leukemia))
