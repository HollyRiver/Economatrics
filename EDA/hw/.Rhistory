q()
q()
q()
qnorm(0.25)
qnorm(0.125)
qnorm(0.0625)
-qnorm(0.0625)
qnorm(0.0625)
qexp(0.75)
qexp(0.5)
log(2)
qexp(0.75)
log(4)
qexp(0.875)
log(8)
qexp(0.9375)
log(16)
pexp(log(8), lower.tail = FALSE
)
pexp(log(16), lower.tail = FALSE)  ##
qnorm(0.25)
-qnorm(0.25) - 2*qnorm(0.25)
-qnorm(0.25) - (qnorm(0.75) - qnorm(0.25))
qnorm(0.75) - qnorm(0.25)
qnorm(0.25) - 1.5*(qnorm(0.75) - qnorm(0.25))
pnorm(-2.7)
pnorm(-2.7)*2
punif(0.25)
punif(0.25) - 1.5 * (punif(0.75) - punif(0.25))
qunif(0.25)
qunif(0.25) - 1.5 * (qunif(0.75) - qunif(0.25))
punif(-0.5)
scan()
data <- scan()
data
rm(list = ls())
data <- scan()
data
write.csv(data, "data.csv")
getwd()
data
install.packages("sleekts")
library(sleekts)
sleek(data)
plot(sleek(data))
plot(sleek(data), lty = 1)
plot(sleek(data), lwd = 1)
plot(sleek(data), type = "l")
plot(sleek(data), type = "l", lwd = 2)
plot(sleek(data), type = "l", lwd = 2, col = 2)
plot(sleek(data), type = "l", lwd = 2, col = "darkorange")
sleek(data)
plot(data)
plot(data, type = 'l')
line(sleek(data))
line(sleek(data), add = T)
lines(sleek(data), add = T)
plot(data, type = 'l')
lines(sleek(data), add = T, lty = 2)
sleek(data)
data
length(data)
smooth(data, kind = "3RSS")
smooth(data, kind = "3RSS")
?smooth
smooth(data)
smooth(data, kind = "3RSS")
smooth(data, kind = "3R")
smooth(data, kind = "3R")
?smooth(data, kind = "3RSS")
??smooth
smooth(x3R, kind = "S")
x3R
data
smooth(data, kind = "3R")
smooth(data, kind = "3R") |> smooth(kind = "S")
smooth(data, kind = "3R") |> smooth(kind = "S") |> smooth(kind = "S")
smooth(data, kind = "3R") |> smooth(kind = "S")
smooth(data, kind = "3R") |> smooth(kind = "S") |> smooth(kind = "S")
smooth(data, kind = "3RSS")
smooth(data, kind = "3R")
smooth(data, kind = "3R") |> smooth(kind = "S")
plot(smooth(data, kind = "3R"))
plot(smooth(data, kind = "3R"), type = "l")
smooth(data, kind = "3RSS") |> plot(type = "l")
smooth(data, kind = "3RSS") |> plot(type = "l")
smooth(data, kind = "3R") |> plot(type ="l")
smooth(data, kind = "3RSS") |> plot(type = "l")
smooth(data, kind = "3R")
smooth(data, kind = "3R") |> plot(type = "l")
smooth(data, kind = "3R") |> smooth(kind = "S")
smooth(data, kind = "3R")
smooth(data, kind = "3R") |> plot(type = "l")
smooth(data, kind = "3R") |> plot(type = "l")
smooth(data, kind = "3RSS") |> plot(type = "l")
smooth(data, kind = "3R") |> plot(type = "l")
smooth(data, kind = "3RSS") |> plot(type = "l")
smooth(data, kind = "3R") |> plot(type = "l")
smooth(data, kind = "3RSS") |> plot(type = "l")
smooth(data, kind = "3R") |> plot(type = "l")
smooth(data, kind = "3R") |> smooth(kind = "S")
smooth(data, kind = "3R") |> smooth(kind = "S") |> smooth(kind = "S")
dev.new()
acf(as.vector(t(elec_data[, -1])))
elec_data = read.csv("HOME_발전·판매_판매전력량_월별.csv", encoding = "UTF-8", fileEncoding = "CP949")
getwd()
setwd("C:/User/hollyriver/desktop/분자벨/")
setwd("C:/Users/hollyriver/Desktop/분자벨"")
elec_data = read.csv("HOME_발전·판매_판매전력량_월별.csv", encoding = "UTF-8", fileEncoding = "CP949")
setwd("C:/Users/hollyriver/Desktop/분자벨")
elec_data = read.csv("HOME_발전·판매_판매전력량_월별.csv", encoding = "UTF-8", fileEncoding = "CP949")
elec_data = elec_data[order(elec_data$연도),]  ## ascending
rownames(elec_data) <- NULL
Series = ts(as.vector(t(elec_data[, -1])), start = c(2000, 1), frequency = 12)
smooth_4253H = sleek(as.vector(t(elec_data[, -1])))
rough_4253H = as.vector(t(elec_data[, -1])) - smooth_4253H
smooth_4253H_tw = smooth_4253H + sleek(rough_4253H)
smooth_3RSSH = hanning(smooth(as.vector(t(elec_data[, -1])), kind = "3RSS"))
rough_3RSSH = as.vector(t(elec_data[, -1])) - smooth_3RSSH
smooth_3RSSH_tw = smooth_3RSSH + hanning(smooth(rough_3RSSH, kind = "3RSS"))
smooth_4253H = sleek(as.vector(t(elec_data[, -1])))
library(sleekts)
hanning = function(x) {
z = c(3*x[2] - 2*x[3])  ## x_0
N = length(x)
z = c(z, x, (3*x[N-1] - 2*x[N-2]))  ## x_n+1
smooth = c()
for (i in 1:N) {
smooth[i] = (z[i] + 2*z[i+1] + z[i+2])/4
}
return(smooth)
}
dev.new()
acf(as.vector(t(elec_data[, -1])))
as.vector(t(elec_data[, -1]))
acf(as.vector(t(elec_data[, -1])))
rice_data = c(5291, 5515, 4927, 4451, 5000, 4768, 4680, 4408, 4843, 4916, 2495, 4224, 4006, 4230, 4241, 4327, 4197, 3972, 3868, 3744, 3507, 3882, 3764, 3702)
ts(rice_data, start = 2000)
plot(ts)
ts(rice_data, start = 2000)
plot(ts(rice_data, start = 2000))
plot(ts(rice_data, start = 2000), ylim = c(0, 6000))
plot(Series, ylim = c(0, 6000))
Series = ts(rice_data, start = 2000)
plot(Series, ylim = c(0, 6000))
smooth_4253H = sleek(Series)
smooth_4253H
rough = Series - smooth_4253H
rough_4253H = Series - smooth_4253H
smooth_4253H_tw = smooth_4253H + sleek(rough_4253H)
?smooth
smooth_3RSSH = hanning(smooth(Series, kind = "3RSS"))
rough_3RSSH = Series - smooth_3RSSH
smooth_3RSSH_tw = smooth_3RSSH + hanning(smooth(rough_3RSSH, kind = "3RSS"))
dev.new()
par(mfrow = c(2, 1))
plot(Series, main = "2000~2023년 국내 쌀 생산량", ylab = "쌀 생산량(만 톤)")
lines(ts(smooth_4253H_tw, start = 2000), col = "darkorange", lwd = 2)
legend("bottomright", legend = c("원 자료", "4253H"), col = c("black", "darkorange"), lty = 1)
plot(Series, main = "2000~2023년 국내 쌀 생산량", ylab = "쌀 생산량(만 톤)")
lines(ts(smooth_3RSSH_tw, start = 2000), col = "darkblue", lwd = 2)
legend("bottomright", legend = c("원 자료", "3RSSH"), col = c("black","darkblue"), lty = 1)
rice_data = c(5291, 5515, 4927, 4451, 5000,
4768, 4680, 4408, 4843, 4916,
2495, 4224, 4006, 4230, 4241,
4327, 4197, 3972, 3868, 3744,
3507, 3882, 3764, 3702)
Series = ts(rice_data, start = 2000)
smooth_4253H = sleek(Series)
rough_4253H = Series - smooth_4253H
smooth_4253H_tw = smooth_4253H + sleek(rough_4253H)
smooth_3RSSH = hanning(smooth(Series, kind = "3RSS"))
rough_3RSSH = Series - smooth_3RSSH
smooth_3RSSH_tw = smooth_3RSSH + hanning(smooth(rough_3RSSH, kind = "3RSS"))
dev.new()
par(mfrow = c(2, 1))
plot(Series, main = "2000~2023년 국내 쌀 생산량", ylab = "쌀 생산량(만 톤)")
lines(ts(smooth_4253H_tw, start = 2000), col = "darkorange", lwd = 2)
legend("bottomright", legend = c("원 자료", "4253H"), col = c("black", "darkorange"), lty = 1)
plot(Series, main = "2000~2023년 국내 쌀 생산량", ylab = "쌀 생산량(만 톤)")
lines(ts(smooth_3RSSH_tw, start = 2000), col = "darkblue", lwd = 2)
legend("bottomright", legend = c("원 자료", "3RSSH"), col = c("black","darkblue"), lty = 1)
dev.new()
par(mfrow = c(2, 1))
plot(Series, main = "2000~2023년 국내 쌀 생산량", ylab = "쌀 생산량(만 톤)", ylim = c(0, 6000))
lines(ts(smooth_4253H_tw, start = 2000), col = "darkorange", lwd = 2)
legend("bottomright", legend = c("원 자료", "4253H"), col = c("black", "darkorange"), lty = 1)
plot(Series, main = "2000~2023년 국내 쌀 생산량", ylab = "쌀 생산량(만 톤)", ylim = c(0, 6000))
lines(ts(smooth_3RSSH_tw, start = 2000), col = "darkblue", lwd = 2)
legend("bottomright", legend = c("원 자료", "3RSSH"), col = c("black","darkblue"), lty = 1)
decompose(log(Series))
